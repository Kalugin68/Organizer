import customtkinter as ctk
from Client.User import password_hasher
from Client.Responses.main_responses import *

# ====== –û–∫–Ω–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ======
class RegisterWindow(ctk.CTkToplevel):
    def __init__(self, client):
        """–°–æ–∑–¥–∞–µ—Ç –æ–∫–Ω–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
        super().__init__()
        ctk.set_appearance_mode("light")  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–º—ã (Light/Dark)
        ctk.set_default_color_theme("green")  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ü–≤–µ—Ç–æ–≤–æ–π —Å—Ö–µ–º—ã

        self.client = client

        self.__username = None
        self.__password = None
        self.__correct_password = None

        # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã —ç–∫—Ä–∞–Ω–∞ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–∫–Ω–æ –ø–æ —Ü–µ–Ω—Ç—Ä—É —ç–∫—Ä–∞–Ω–∞
        screen_width = self.winfo_screenwidth()
        screen_height = self.winfo_screenheight()
        window_width = 550
        window_height = 505
        x = (screen_width // 2) - (window_width // 2)
        y = (screen_height // 2) - (window_height // 2)
        self.geometry(f"{window_width}x{window_height}+{x}+{y}")

        self.title("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
        self.geometry("400x350")

        # –û—Å–Ω–æ–≤–Ω–æ–π —Ñ—Ä–µ–π–º
        self.frame = ctk.CTkFrame(self)
        self.frame.pack(pady=20, padx=40, fill="both", expand=True)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        ctk.CTkLabel(self.frame, text="–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", font=("Arial", 20)).pack(pady=10)

        # –ü–æ–ª–µ –≤–≤–æ–¥–∞ –ª–æ–≥–∏–Ω–∞
        self.new_username_entry = ctk.CTkEntry(self.frame, placeholder_text="–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –ª–æ–≥–∏–Ω")
        self.new_username_entry.pack(pady=5)

        # –ü–æ–ª–µ –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è
        self.new_password_entry = ctk.CTkEntry(self.frame, placeholder_text="–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å", show="*")
        self.new_password_entry.pack(pady=5)

        # –§—Ä–µ–π–º –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è –∏ –∫–Ω–æ–ø–∫–∏ "–ì–ª–∞–∑"
        self.password_frame = ctk.CTkFrame(self.frame, fg_color="transparent")
        self.password_frame.pack(pady=5, fill="x")

        # –ü–æ–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è
        self.second_password_entry = ctk.CTkEntry(self.password_frame, placeholder_text="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å", show="*")
        self.second_password_entry.pack(padx=(89, 5), pady=5, side="left")

        # –ö–Ω–æ–ø–∫–∞ —Å–∫—Ä—ã—Ç–∏—è/–æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è
        self.show_password = False
        self.toggle_button = ctk.CTkButton(self.password_frame, text="üëÅ", width=10, command=self.toggle_password)
        self.toggle_button.pack(side="left")

        # –ö–Ω–æ–ø–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        self.register_button = ctk.CTkButton(self.frame, text="–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è", command=self.register_user)
        self.register_button.pack(pady=10)

        # –ú–µ—Ç–∫–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ –æ—à–∏–±–æ–∫
        self.error_label = ctk.CTkLabel(self.frame, text="", text_color="red")
        self.error_label.pack(pady=10)

    def register_user(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        self.set_username(self.new_username_entry.get().strip())
        self.set_password(self.new_password_entry.get().strip())
        self.set_correct_password(self.second_password_entry.get().strip())

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç—ã–µ –ø–æ–ª—è
        if not self.get_username() or not self.get_password() or not self.get_correct_password():
            self.error_label.configure(text="–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å!", text_color="red")
            return

        # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        if send_new_profile(self.client, self.get_username(),
                            self.get_password(), self.get_correct_password()) == "OK":
            self.error_label.configure(text="–ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω!", text_color="green")
            self.destroy()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        elif send_new_profile(self.client, self.get_username(),
                            self.get_password(), self.get_correct_password()) == "PROFILE EXISTS":
            self.error_label.configure(text="–î–∞–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!", text_color="red")
        else:
            self.error_label.configure(text="–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!", text_color="red")

    def toggle_password(self):
        """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –ø–∞—Ä–æ–ª—è"""
        self.show_password = not self.show_password
        self.new_password_entry.configure(show="" if self.show_password else "*")
        self.second_password_entry.configure(show="" if self.show_password else "*")

    # –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∑–∞—â–∏—â—ë–Ω–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
    def get_username(self):
        return self.__username

    def set_username(self, username):
        self.__username = username

    def get_password(self):
        return self.__password

    def set_password(self, password):
        self.__password = password

    def get_correct_password(self):
        return self.__correct_password

    def set_correct_password(self, correct_password):
        self.__correct_password = correct_password

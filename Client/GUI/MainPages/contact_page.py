import customtkinter as ctk
from CTkListbox import *
from Client.Responses.contact_responses import *


class ContactPage:
    def __init__(self, parent_frame, client, user_id):
        self.parent_frame = parent_frame
        self.client = client
        self.user_id = user_id
        self.contacts = {}  # {contact_id: (name, surname, phone, email)}
        self.contact_ids = []

    def create_contacts_page(self):
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ñ—Ä–µ–π–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
        frame = ctk.CTkFrame(self.parent_frame)
        frame.pack(fill="both", expand=True)

        # –°–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ —Å–ª–µ–≤–∞
        self.contacts_listbox = CTkListbox(frame, width=200, height=300)
        self.contacts_listbox.pack(side="left", padx=10, pady=(10, 100), fill="y")
        self.contacts_listbox.bind("<<ListboxSelect>>", self.load_contact)

        # === –ü—Ä–∞–≤—ã–π —Ñ—Ä–µ–π–º: –ø–æ–ª—è –≤–≤–æ–¥–∞ –∏ –∫–Ω–æ–ø–∫–∏ ===
        right_frame = ctk.CTkFrame(frame)
        right_frame.pack(side="right", fill="both", expand=True, pady=10)

        # –ü–æ–ª—è –≤–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–Ω—Ç–∞–∫—Ç–µ
        self.name_entry = ctk.CTkEntry(right_frame, width=300, placeholder_text="–ò–º—è")
        self.name_entry.pack(padx=10, pady=5, fill="x")
        self.surname_entry = ctk.CTkEntry(right_frame, width=300, placeholder_text="–§–∞–º–∏–ª–∏—è")
        self.surname_entry.pack(padx=10, pady=5, fill="x")
        self.phone_entry = ctk.CTkEntry(right_frame, width=300, placeholder_text="–¢–µ–ª–µ—Ñ–æ–Ω")
        self.phone_entry.pack(padx=10, pady=5, fill="x")
        self.email_entry = ctk.CTkEntry(right_frame, width=300, placeholder_text="Email")
        self.email_entry.pack(padx=10, pady=5, fill="x")

        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏
        buttons_frame = ctk.CTkFrame(right_frame)
        buttons_frame.pack(pady=10)

        self.add_button = ctk.CTkButton(buttons_frame, text="‚ûï –î–æ–±–∞–≤–∏—Ç—å", command=self.add_contact)
        self.add_button.grid(row=0, column=0, padx=5, pady=5)
        self.save_button = ctk.CTkButton(buttons_frame, text="üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", command=self.update_contact)
        self.save_button.grid(row=0, column=1, padx=5, pady=5)
        self.delete_button = ctk.CTkButton(buttons_frame, text="üóë –£–¥–∞–ª–∏—Ç—å", fg_color="red", command=self.delete_contact)
        self.delete_button.grid(row=1, column=0, padx=5, pady=5)
        self.clear_button = ctk.CTkButton(buttons_frame, text="üßπ –û—á–∏—Å—Ç–∏—Ç—å –ø–æ–ª—è", command=self.clear_entries)
        self.clear_button.grid(row=1, column=1, padx=5, pady=5)

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç—ã —Å —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        self.get_contacts_from_server()

        return frame

    def get_contacts_from_server(self):
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞
        contacts = get_contacts(self.client, self.user_id)
        if contacts is None:
            return

        self.contacts.clear()
        self.contact_ids.clear()
        self.contacts_listbox.delete(0, "end")

        for contact_info in contacts:
            if contact_info.strip():
                contact_parts = contact_info.split(";")
                if len(contact_parts) == 5:
                    contact_id, name, surname, phone, email = contact_parts
                    self.contacts[contact_id] = (name, surname, phone, email)
                    self.contact_ids.append(contact_id)
                    self.contacts_listbox.insert("end", f"{name} {surname}")
        print(f"[INFO] –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(self.contacts)} –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤.")

    def add_contact(self):
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞ —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä
        if send_contact(self.client, self.user_id, name=self.name_entry.get(), surname=self.surname_entry.get(),
                        phone=self.phone_entry.get(), email=self.email_entry.get()) == "OK":
            self.get_contacts_from_server()
            self.clear_entries()
        else:
            print("[ERROR] –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç")

    def delete_contact(self):
        # –£–¥–∞–ª–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞
        if remove_contact(self.client, self.contacts_listbox, self.contact_ids, self.contacts) == "OK":
            self.clear_entries()
        else:
            print("[ERROR] –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞")

    def update_contact(self):
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞
        selected_index = self.contacts_listbox.curselection()

        if update_contact_data(self.client, self.contacts, self.contact_ids[selected_index],
                               selected_index, self.name_entry.get().strip(), self.surname_entry.get().strip(),
                               self.phone_entry.get().strip(), self.email_entry.get().strip()) == "OK":
            self.update_contacts_list()

    def load_contact(self, event=None):
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç –≤ –ø–æ–ª—è –≤–≤–æ–¥–∞
        selected_index = self.contacts_listbox.curselection()
        if selected_index is not None:
            contact_id = self.contact_ids[selected_index]
            name, surname, phone, email = self.contacts[contact_id]
            self.name_entry.delete(0, "end")
            self.name_entry.insert(0, name)
            self.surname_entry.delete(0, "end")
            self.surname_entry.insert(0, surname)
            self.phone_entry.delete(0, "end")
            self.phone_entry.insert(0, phone)
            self.email_entry.delete(0, "end")
            self.email_entry.insert(0, email)

    def update_contacts_list(self):
        # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
        self.contacts_listbox.delete(0, 'end')
        for contact_id, (name, surname, _, _) in self.contacts.items():
            self.contacts_listbox.insert("end", f"{name} {surname}")

    def clear_entries(self):
        # –û—á–∏—â–∞–µ–º –≤—Å–µ –ø–æ–ª—è –≤–≤–æ–¥–∞
        self.name_entry.delete(0, "end")
        self.surname_entry.delete(0, "end")
        self.phone_entry.delete(0, "end")
        self.email_entry.delete(0, "end")
